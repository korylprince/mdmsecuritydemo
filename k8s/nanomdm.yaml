apiVersion: v1
kind: Namespace
metadata:
  name: nanomdm

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nanomdm
  namespace: nanomdm
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Secret
metadata:
  name: api-key
  namespace: nanomdm
  annotations:
    secret-generator.v1.mittwald.de/autogenerate: password

# FIXME: automate this
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: intermediate
  namespace: nanomdm
data:
  intermediate.crt: |
    -----BEGIN CERTIFICATE-----
    MIIBtjCCAV2gAwIBAgIQPOzICGysIwn2atFyoGFWpTAKBggqhkjOPQQDAjAbMRkw
    FwYDVQQDExBteWNvb2xtZG0uc3RyZWFtMB4XDTI1MDUyMjA2NDk0N1oXDTM1MDUy
    MDA2NDk0N1owODESMBAGA1UEChMJc21hbGxzdGVwMSIwIAYDVQQDExlzbWFsbHN0
    ZXAgSW50ZXJtZWRpYXRlIENBMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEjgpM
    L/LHf90O+ZN/G+bwhU8DUtoWibcJR0sMBGKK/0L3YZOPL5HD7DBdEImCUeReI02l
    8MzP67i9Wzke6V/2KKNmMGQwDgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYB
    Af8CAQAwHQYDVR0OBBYEFGP0Qqp+bv/tFVr7jARTQExjJRXyMB8GA1UdIwQYMBaA
    FFKLu7Vciwd5bHjrvj/wDALHakpxMAoGCCqGSM49BAMCA0cAMEQCIDgdY25b4uLt
    yNjbUwAxduZ45uxLw5sXnCObOWyYntsEAiBiLO5zIQUUPC5cxBZ43adIrzzGQ+rP
    RQv1Nqkjd7RMMg==
    -----END CERTIFICATE-----
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nanomdm
  namespace: nanomdm
  labels:
    app: nanomdm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nanomdm
  template:
    metadata:
      labels:
        app: nanomdm
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: nanomdm
        - name: ca
          secret:
            secretName: ca-secret
            items:
            - key: ca.crt
              path: ca.crt
        - name: intermediate
          configMap:
            name: intermediate
            items:
              - key: intermediate.crt
                path: intermediate.crt
      containers:
      - name: nanomdm
        image: ghcr.io/micromdm/nanomdm:sha-07ea751
        args:
          - "-ca"
          - /etc/nanomdm/ca.crt
          - "-intermediate"
          - /etc/nanomdm/intermediate/intermediate.crt
          - "-storage"
          - filekv
          - "-storage-dsn"
          - "/data"
          - "-webhook-url"
          - "http://webhook:8080"
          - "-api"
          - "$(API_KEY)"
        ports:
        - containerPort: 9000
        env:
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: api-key
              key: password
        volumeMounts:
        - name: "data"
          mountPath: data
        - name: "ca"
          mountPath: /etc/nanomdm
        - name: "intermediate"
          mountPath: /etc/nanomdm/intermediate

---
apiVersion: v1
kind: Service
metadata:
  name: nanomdm
  namespace: nanomdm
spec:
  selector:
    app: nanomdm
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: nanomdm
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: kube-system-https-redirect@kubernetescrd
spec:
  rules:
  - host: "mycoolmdm.stream"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nanomdm
            port:
              number: 80
  tls:
    - secretName: ingress-tls
      hosts:
        - mycoolmdm.stream
